name: Terraform Infrastructure Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format Check
        run: |
          find . -name '*.tf' -type f -print0 | xargs -0 -n1 terraform fmt -check=true

  deploy:
    needs: lint
    runs-on: ubuntu-latest

    if: ${{ github.ref == 'refs/heads/main' && needs.lint.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Google Cloud SDK
        run: |
          curl https://sdk.cloud.google.com | bash
          exec -l $SHELL
          gcloud components update

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          default_region: ${{ secrets.GCP_REGION }}
          default_zone: ${{ secrets.GCP_ZONE }}

      - name: Authenticate with Google Cloud SDK
        run: |
          gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}
          gcloud auth configure-docker

      - name: Export Google Application Credentials
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > /tmp/gcp_sa_key.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp_sa_key.json"

      - name: Run Terraform Init
        run: terraform init

      - name: Run Terraform Plan
        run: terraform plan

      - name: Run Terraform Apply
        run: terraform apply -auto-approve